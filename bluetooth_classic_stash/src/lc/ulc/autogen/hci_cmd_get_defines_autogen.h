#ifndef LL_HCI_CMD_GET_DEF_H
#define LL_HCI_CMD_GET_DEF_H
#include <stdint.h>

/*LINK_CONTROL PARAMETERS */

// Command: INQUIRY
#define GET_INQUIRY_LAP(buf)   (uint32_t *)(&buf[4])
//INQUIRY_lap 3
#define GET_INQUIRY_INQUIRY_LENGTH(buf)  buf[7]
//INQUIRY_inquiry_length 1
#define GET_INQUIRY_NUM_RESPONSES(buf)  buf[8]
//INQUIRY_num_responses 1

// Command: PERIODIC_INQUIRY_MODE
#define GET_PERIODIC_INQUIRY_MODE_MAX_PERIOD_LENGTH(buf)  *((uint16_t *)(&buf[4]))
//PERIODIC_INQUIRY_MODE_max_period_length 2
#define GET_PERIODIC_INQUIRY_MODE_MIN_PERIOD_LENGTH(buf)  *((uint16_t *)(&buf[6]))
//PERIODIC_INQUIRY_MODE_min_period_length 2
#define GET_PERIODIC_INQUIRY_MODE_LAP(buf)   (uint32_t *)(&buf[8])
//PERIODIC_INQUIRY_MODE_lap 3
#define GET_PERIODIC_INQUIRY_MODE_INQUIRY_LENGTH(buf)  buf[11]
//PERIODIC_INQUIRY_MODE_inquiry_length 1
#define GET_PERIODIC_INQUIRY_MODE_NUM_RESPONSES(buf)  buf[12]
//PERIODIC_INQUIRY_MODE_num_responses 1

// Command: CREATE_CONNECTION
#define GET_CREATE_CONNECTION_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//CREATE_CONNECTION_bd_addr 6
#define GET_CREATE_CONNECTION_PKT_TYPE(buf)  *((uint16_t *)(&buf[10]))
//CREATE_CONNECTION_pkt_type 2
#define GET_CREATE_CONNECTION_PAGE_SCAN_REP_MODE(buf)  buf[12]
//CREATE_CONNECTION_page_scan_rep_mode 1
#define GET_CREATE_CONNECTION_RESERVED(buf)  buf[13]
//CREATE_CONNECTION_reserved 1
#define GET_CREATE_CONNECTION_CLOCK_OFFSET(buf)  *((uint16_t *)(&buf[14]))
//CREATE_CONNECTION_clock_offset 2
#define GET_CREATE_CONNECTION_ALLOW_ROLE_SWITCH(buf)  buf[16]
//CREATE_CONNECTION_allow_role_switch 1

// Command: DISCONNECT
#define GET_DISCONNECT_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//DISCONNECT_connection_handle 2
#define GET_DISCONNECT_REASON(buf)  buf[6]
//DISCONNECT_reason 1

// Command: CREATE_CONNECTION_CANCEL
#define GET_CREATE_CONNECTION_CANCEL_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//CREATE_CONNECTION_CANCEL_bd_addr 6

// Command: ACCEPT_CONNECTION_REQUEST
#define GET_ACCEPT_CONNECTION_REQUEST_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//ACCEPT_CONNECTION_REQUEST_bd_addr 6
#define GET_ACCEPT_CONNECTION_REQUEST_ROLE(buf)  buf[10]
//ACCEPT_CONNECTION_REQUEST_role 1

// Command: REJECT_CONNECTION_REQUEST
#define GET_REJECT_CONNECTION_REQUEST_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//REJECT_CONNECTION_REQUEST_bd_addr 6
#define GET_REJECT_CONNECTION_REQUEST_REASON(buf)  buf[10]
//REJECT_CONNECTION_REQUEST_reason 1

// Command: LINK_KEY_REQUEST_REPLY
#define GET_LINK_KEY_REQUEST_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//LINK_KEY_REQUEST_REPLY_bd_addr 6
#define GET_LINK_KEY_REQUEST_REPLY_LINK_KEY(buf)  (uint8_t *)(&buf[10])
//LINK_KEY_REQUEST_REPLY_link_key 16

// Command: LINK_KEY_REQUEST_NEGATIVE_REPLY
#define GET_LINK_KEY_REQUEST_NEGATIVE_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//LINK_KEY_REQUEST_NEGATIVE_REPLY_bd_addr 6

// Command: PIN_CODE_REQUEST_REPLY
#define GET_PIN_CODE_REQUEST_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//PIN_CODE_REQUEST_REPLY_bd_addr 6
#define GET_PIN_CODE_REQUEST_REPLY_PIN_CODE_LENGTH(buf)  buf[10]
//PIN_CODE_REQUEST_REPLY_pin_code_length 1
#define GET_PIN_CODE_REQUEST_REPLY_PIN_CODE(buf)  (uint8_t *)(&buf[11])
//PIN_CODE_REQUEST_REPLY_pin_code 16

// Command: PIN_CODE_REQUEST_NEGATIVE_REPLY
#define GET_PIN_CODE_REQUEST_NEGATIVE_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//PIN_CODE_REQUEST_NEGATIVE_REPLY_bd_addr 6

// Command: CHANGE_CONNECTION_PACKET_TYPE
#define GET_CHANGE_CONNECTION_PACKET_TYPE_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//CHANGE_CONNECTION_PACKET_TYPE_connection_handle 2
#define GET_CHANGE_CONNECTION_PACKET_TYPE_PKT_TYPE(buf)  *((uint16_t *)(&buf[6]))
//CHANGE_CONNECTION_PACKET_TYPE_pkt_type 2

// Command: AUTHENTICATION_REQUESTED
#define GET_AUTHENTICATION_REQUESTED_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//AUTHENTICATION_REQUESTED_connection_handle 2

// Command: SET_CONNECTION_ENCRYPTION
#define GET_SET_CONNECTION_ENCRYPTION_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//SET_CONNECTION_ENCRYPTION_connection_handle 2
#define GET_SET_CONNECTION_ENCRYPTION_ENCRYPTION_ENABLE(buf)  buf[6]
//SET_CONNECTION_ENCRYPTION_encryption_enable 1

// Command: CHANGE_CONNECTION_LINK_KEY
#define GET_CHANGE_CONNECTION_LINK_KEY_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//CHANGE_CONNECTION_LINK_KEY_connection_handle 2

// Command: REMOTE_NAME_REQUEST
#define GET_REMOTE_NAME_REQUEST_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//REMOTE_NAME_REQUEST_bd_addr 6
#define GET_REMOTE_NAME_REQUEST_PAGE_SCAN_REP_MODE(buf)  buf[10]
//REMOTE_NAME_REQUEST_page_scan_rep_mode 1
#define GET_REMOTE_NAME_REQUEST_RESERVED(buf)  buf[11]
//REMOTE_NAME_REQUEST_reserved 1
#define GET_REMOTE_NAME_REQUEST_CLK_OFFSET(buf)  *((uint16_t *)(&buf[12]))
//REMOTE_NAME_REQUEST_clk_offset 2

// Command: REMOTE_NAME_REQUEST_CANCEL
#define GET_REMOTE_NAME_REQUEST_CANCEL_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//REMOTE_NAME_REQUEST_CANCEL_bd_addr 6

// Command: READ_REMOTE_SUPPORTED_FEATURES
#define GET_READ_REMOTE_SUPPORTED_FEATURES_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_REMOTE_SUPPORTED_FEATURES_connection_handle 2

// Command: READ_REMOTE_EXTENDED_FEATURES
#define GET_READ_REMOTE_EXTENDED_FEATURES_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_REMOTE_EXTENDED_FEATURES_connection_handle 2
#define GET_READ_REMOTE_EXTENDED_FEATURES_PAGE_NUMBER(buf)  buf[6]
//READ_REMOTE_EXTENDED_FEATURES_page_number 1

// Command: READ_REMOTE_VERSION_INFORMATION
#define GET_READ_REMOTE_VERSION_INFORMATION_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_REMOTE_VERSION_INFORMATION_connection_handle 2

// Command: READ_CLOCK_OFFSET
#define GET_READ_CLOCK_OFFSET_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_CLOCK_OFFSET_connection_handle 2

// Command: SETUP_SYNCHRONOUS_CONNECTION
#define GET_SETUP_SYNCHRONOUS_CONNECTION_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//SETUP_SYNCHRONOUS_CONNECTION_connection_handle 2
#define GET_SETUP_SYNCHRONOUS_CONNECTION_TRANSMIT_BANDWIDTH(buf)  (uint32_t *)(&buf[6])
//SETUP_SYNCHRONOUS_CONNECTION_transmit_bandwidth 4
#define GET_SETUP_SYNCHRONOUS_CONNECTION_RECEIVE_BANDWIDTH(buf)  (uint32_t *)(&buf[10])
//SETUP_SYNCHRONOUS_CONNECTION_receive_bandwidth 4
#define GET_SETUP_SYNCHRONOUS_CONNECTION_MAX_LATENCY(buf)  *((uint16_t *)(&buf[14]))
//SETUP_SYNCHRONOUS_CONNECTION_max_latency 2
#define GET_SETUP_SYNCHRONOUS_CONNECTION_VOICE_SETTING(buf)  *((uint16_t *)(&buf[16]))
//SETUP_SYNCHRONOUS_CONNECTION_voice_setting 2
#define GET_SETUP_SYNCHRONOUS_CONNECTION_RETRANSMISSION_EFFORT(buf)  buf[18]
//SETUP_SYNCHRONOUS_CONNECTION_retransmission_effort 1
#define GET_SETUP_SYNCHRONOUS_CONNECTION_PKT_TYPE(buf)  *((uint16_t *)(&buf[19]))
//SETUP_SYNCHRONOUS_CONNECTION_pkt_type 2

// Command: ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST
#define GET_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_bd_addr 6
#define GET_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_TRANSMIT_BANDWIDTH(buf)  (uint32_t *)(&buf[10])
//ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_transmit_bandwidth 4
#define GET_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_RECEIVE_BANDWIDTH(buf)  (uint32_t *)(&buf[14])
//ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_receive_bandwidth 4
#define GET_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_MAX_LATENCY(buf)  *((uint16_t *)(&buf[18]))
//ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_max_latency 2
#define GET_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_VOICE_SETTING(buf)  *((uint16_t *)(&buf[20]))
//ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_voice_setting 2
#define GET_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_RETRANSMISSION_EFFORT(buf)  buf[22]
//ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_retransmission_effort 1
#define GET_ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_PKT_TYPE(buf)  *((uint16_t *)(&buf[23]))
//ACCEPT_SYNCHRONOUS_CONNECTION_REQUEST_pkt_type 2

// Command: REJECT_SYNCHRONOUS_CONNECTION_REQUEST
#define GET_REJECT_SYNCHRONOUS_CONNECTION_REQUEST_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//REJECT_SYNCHRONOUS_CONNECTION_REQUEST_bd_addr 6
#define GET_REJECT_SYNCHRONOUS_CONNECTION_REQUEST_REASON(buf)  buf[10]
//REJECT_SYNCHRONOUS_CONNECTION_REQUEST_reason 1

// Command: IO_CAPABILITY_REQUEST_REPLY
#define GET_IO_CAPABILITY_REQUEST_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//IO_CAPABILITY_REQUEST_REPLY_bd_addr 6
#define GET_IO_CAPABILITY_REQUEST_REPLY_IO_CAPABILITY(buf)  buf[10]
//IO_CAPABILITY_REQUEST_REPLY_io_capability 1
#define GET_IO_CAPABILITY_REQUEST_REPLY_OOB_DATA_PRESENT(buf)  buf[11]
//IO_CAPABILITY_REQUEST_REPLY_oob_data_present 1
#define GET_IO_CAPABILITY_REQUEST_REPLY_AUTHENTICATION_REQUIREMENTS(buf)  buf[12]
//IO_CAPABILITY_REQUEST_REPLY_authentication_requirements 1

// Command: USER_CONFIRMATION_REQUEST_REPLY
#define GET_USER_CONFIRMATION_REQUEST_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//USER_CONFIRMATION_REQUEST_REPLY_bd_addr 6

// Command: USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY
#define GET_USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY_bd_addr 6

// Command: USER_PASSKEY_REQUEST_REPLY
#define GET_USER_PASSKEY_REQUEST_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//USER_PASSKEY_REQUEST_REPLY_bd_addr 6
#define GET_USER_PASSKEY_REQUEST_REPLY_NUMERIC_VALUE(buf)  (uint32_t *)(&buf[10])
//USER_PASSKEY_REQUEST_REPLY_numeric_value 4

// Command: USER_PASSKEY_REQUEST_NEGATIVE_REPLY
#define GET_USER_PASSKEY_REQUEST_NEGATIVE_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//USER_PASSKEY_REQUEST_NEGATIVE_REPLY_bd_addr 6

// Command: REMOTE_OOB_DATA_REQUEST_REPLY
#define GET_REMOTE_OOB_DATA_REQUEST_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//REMOTE_OOB_DATA_REQUEST_REPLY_bd_addr 6
#define GET_REMOTE_OOB_DATA_REQUEST_REPLY_C(buf)  (uint8_t *)(&buf[10])
//REMOTE_OOB_DATA_REQUEST_REPLY_c 16
#define GET_REMOTE_OOB_DATA_REQUEST_REPLY_R(buf)  (uint8_t *)(&buf[26])
//REMOTE_OOB_DATA_REQUEST_REPLY_r 16

// Command: REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY
#define GET_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY_bd_addr 6

// Command: IO_CAPABILITY_REQUEST_NEGATIVE_REPLY
#define GET_IO_CAPABILITY_REQUEST_NEGATIVE_REPLY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//IO_CAPABILITY_REQUEST_NEGATIVE_REPLY_bd_addr 6
#define GET_IO_CAPABILITY_REQUEST_NEGATIVE_REPLY_REASON(buf)  buf[10]
//IO_CAPABILITY_REQUEST_NEGATIVE_REPLY_reason 1


/*LINK_POLICY PARAMETERS */

// Command: SNIFF_MODE
#define GET_SNIFF_MODE_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//SNIFF_MODE_connection_handle 2
#define GET_SNIFF_MODE_SNIFF_MAX_INTERVAL(buf)  *((uint16_t *)(&buf[6]))
//SNIFF_MODE_sniff_max_interval 2
#define GET_SNIFF_MODE_SNIFF_MIN_INTERVAL(buf)  *((uint16_t *)(&buf[8]))
//SNIFF_MODE_sniff_min_interval 2
#define GET_SNIFF_MODE_SNIFF_ATTEMPT(buf)  *((uint16_t *)(&buf[10]))
//SNIFF_MODE_sniff_attempt 2
#define GET_SNIFF_MODE_SNIFF_TIMEOUT(buf)  *((uint16_t *)(&buf[12]))
//SNIFF_MODE_sniff_timeout 2

// Command: EXIT_SNIFF_MODE
#define GET_EXIT_SNIFF_MODE_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//EXIT_SNIFF_MODE_connection_handle 2

// Command: QOS_SETUP
#define GET_QOS_SETUP_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//QOS_SETUP_connection_handle 2
#define GET_QOS_SETUP_UNUSED(buf)  buf[6]
//QOS_SETUP_unused 1
#define GET_QOS_SETUP_SERVICE_TYPE(buf)  buf[7]
//QOS_SETUP_service_type 1
#define GET_QOS_SETUP_TOKEN_RATE(buf)  (uint32_t *)(&buf[8])
//QOS_SETUP_token_rate 4
#define GET_QOS_SETUP_PEAK_BANDWIDTH(buf)  (uint32_t *)(&buf[12])
//QOS_SETUP_peak_bandwidth 4
#define GET_QOS_SETUP_LATENCY(buf)  (uint32_t *)(&buf[16])
//QOS_SETUP_latency 4
#define GET_QOS_SETUP_DELAY_VARIATION(buf)  (uint32_t *)(&buf[20])
//QOS_SETUP_delay_variation 4

// Command: ROLE_DISCOVERY
#define GET_ROLE_DISCOVERY_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//ROLE_DISCOVERY_connection_handle 2

// Command: SWITCH_ROLE
#define GET_SWITCH_ROLE_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//SWITCH_ROLE_bd_addr 6
#define GET_SWITCH_ROLE_ROLE(buf)  buf[10]
//SWITCH_ROLE_role 1

// Command: READ_LINK_POLICY_SETTINGS
#define GET_READ_LINK_POLICY_SETTINGS_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_LINK_POLICY_SETTINGS_connection_handle 2

// Command: WRITE_LINK_POLICY_SETTINGS
#define GET_WRITE_LINK_POLICY_SETTINGS_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//WRITE_LINK_POLICY_SETTINGS_connection_handle 2
#define GET_WRITE_LINK_POLICY_SETTINGS_LINK_POLICY_SETTINGS(buf)  *((uint16_t *)(&buf[6]))
//WRITE_LINK_POLICY_SETTINGS_link_policy_settings 2

// Command: WRITE_DEFAULT_LINK_POLICY_SETTINGS
#define GET_WRITE_DEFAULT_LINK_POLICY_SETTINGS_DEFAULT_LINK_POLICY_SETTINGS(buf)  *((uint16_t *)(&buf[4]))
//WRITE_DEFAULT_LINK_POLICY_SETTINGS_default_link_policy_settings 2

// Command: SNIFF_SUBRATING
#define GET_SNIFF_SUBRATING_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//SNIFF_SUBRATING_connection_handle 2
#define GET_SNIFF_SUBRATING_MAX_LATENCY(buf)  *((uint16_t *)(&buf[6]))
//SNIFF_SUBRATING_max_latency 2
#define GET_SNIFF_SUBRATING_MIN_REMOTE_TIMEOUT(buf)  *((uint16_t *)(&buf[8]))
//SNIFF_SUBRATING_min_remote_timeout 2
#define GET_SNIFF_SUBRATING_MIN_LOCAL_TIMEOUT(buf)  *((uint16_t *)(&buf[10]))
//SNIFF_SUBRATING_min_local_timeout 2


/*CONTROLLER_AND_BASEBAND PARAMETERS */

// Command: SET_EVENT_MASK
#define GET_SET_EVENT_MASK_EVENT_MASK(buf)  (uint8_t *)(&buf[4])
//SET_EVENT_MASK_event_mask 8

// Command: SET_EVENT_FILTER
#define GET_SET_EVENT_FILTER_FILTER_TYPE(buf)  buf[4]
//SET_EVENT_FILTER_filter_type 1
#define GET_SET_EVENT_FILTER_FILTER_CONDITION_TYPE(buf)  buf[5]
//SET_EVENT_FILTER_filter_condition_type 1
#define GET_SET_EVENT_FILTER_CONDITION(buf)  buf[6]
//SET_EVENT_FILTER_condition 1

// Command: WRITE_PIN_TYPE
#define GET_WRITE_PIN_TYPE_PIN_TYPE(buf)  buf[4]
//WRITE_PIN_TYPE_pin_type 1

// Command: READ_STORED_LINK_KEY
#define GET_READ_STORED_LINK_KEY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//READ_STORED_LINK_KEY_bd_addr 6
#define GET_READ_STORED_LINK_KEY_READ_ALL_FLAG(buf)  buf[10]
//READ_STORED_LINK_KEY_read_all_flag 1

// Command: WRITE_STORED_LINK_KEY
#define GET_WRITE_STORED_LINK_KEY_NUM_KEYS_TO_WRITE(buf)  buf[4]
//WRITE_STORED_LINK_KEY_num_keys_to_write 1
#define GET_WRITE_STORED_LINK_KEY_BD_ADDR(buf)  (uint8_t *)(&buf[5])
//WRITE_STORED_LINK_KEY_bd_addr 6
#define GET_WRITE_STORED_LINK_KEY_LINK_KEY(buf)  (uint8_t *)(&buf[11])
//WRITE_STORED_LINK_KEY_link_key 16

// Command: DELETE_STORED_LINK_KEY
#define GET_DELETE_STORED_LINK_KEY_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//DELETE_STORED_LINK_KEY_bd_addr 6
#define GET_DELETE_STORED_LINK_KEY_DELETE_ALL_FLAG(buf)  buf[10]
//DELETE_STORED_LINK_KEY_delete_all_flag 1

// Command: WRITE_LOCAL_NAME
#define GET_WRITE_LOCAL_NAME_LOCAL_NAME(buf)  (uint8_t *)(&buf[4])
//WRITE_LOCAL_NAME_local_name -1

// Command: READ_LOCAL_NAME
#define GET_READ_LOCAL_NAME_SAMPLEDATA(buf)  buf[4]
//READ_LOCAL_NAME_sampledata 1

// Command: WRITE_CONNECTION_ACCEPT_TIMEOUT
#define GET_WRITE_CONNECTION_ACCEPT_TIMEOUT_CONN_ACCEPT_TIMEOUT(buf)  *((uint16_t *)(&buf[4]))
//WRITE_CONNECTION_ACCEPT_TIMEOUT_conn_accept_timeout 2

// Command: WRITE_PAGE_TIMEOUT
#define GET_WRITE_PAGE_TIMEOUT_PAGE_TIMEOUT(buf)  *((uint16_t *)(&buf[4]))
//WRITE_PAGE_TIMEOUT_page_timeout 2

// Command: WRITE_SCAN_ENABLE
#define GET_WRITE_SCAN_ENABLE_SCAN_ENABLE(buf)  buf[4]
//WRITE_SCAN_ENABLE_scan_enable 1

// Command: WRITE_PAGE_SCAN_ACTIVITY
#define GET_WRITE_PAGE_SCAN_ACTIVITY_PAGE_SCAN_INTERVAL(buf)  *((uint16_t *)(&buf[4]))
//WRITE_PAGE_SCAN_ACTIVITY_page_scan_interval 2
#define GET_WRITE_PAGE_SCAN_ACTIVITY_PAGE_SCAN_WINDOW(buf)  *((uint16_t *)(&buf[6]))
//WRITE_PAGE_SCAN_ACTIVITY_page_scan_window 2

// Command: WRITE_INQUIRY_SCAN_ACTIVITY
#define GET_WRITE_INQUIRY_SCAN_ACTIVITY_INQUIRY_SCAN_INTERVAL(buf)  *((uint16_t *)(&buf[4]))
//WRITE_INQUIRY_SCAN_ACTIVITY_inquiry_scan_interval 2
#define GET_WRITE_INQUIRY_SCAN_ACTIVITY_INQUIRY_SCAN_WINDOW(buf)  *((uint16_t *)(&buf[6]))
//WRITE_INQUIRY_SCAN_ACTIVITY_inquiry_scan_window 2

// Command: WRITE_AUTHENTICATION_ENABLE
#define GET_WRITE_AUTHENTICATION_ENABLE_AUTHENTICATION_ENABLE(buf)  buf[4]
//WRITE_AUTHENTICATION_ENABLE_authentication_enable 1

// Command: WRITE_CLASS_OF_DEVICE
#define GET_WRITE_CLASS_OF_DEVICE_CLASS_OF_DEVICE(buf)   (uint32_t *)(&buf[4])
//WRITE_CLASS_OF_DEVICE_class_of_device 3

// Command: WRITE_VOICE_SETTING
#define GET_WRITE_VOICE_SETTING_VOICE_SETTING(buf)  *((uint16_t *)(&buf[4]))
//WRITE_VOICE_SETTING_voice_setting 2

// Command: READ_AUTOMATIC_FLUSH_TIMEOUT
#define GET_READ_AUTOMATIC_FLUSH_TIMEOUT_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_AUTOMATIC_FLUSH_TIMEOUT_connection_handle 2

// Command: WRITE_AUTOMATIC_FLUSH_TIMEOUT
#define GET_WRITE_AUTOMATIC_FLUSH_TIMEOUT_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//WRITE_AUTOMATIC_FLUSH_TIMEOUT_connection_handle 2
#define GET_WRITE_AUTOMATIC_FLUSH_TIMEOUT_FLUSH_TIMEOUT(buf)  *((uint16_t *)(&buf[6]))
//WRITE_AUTOMATIC_FLUSH_TIMEOUT_flush_timeout 2

// Command: READ_TRANSMIT_POWER_LEVEL
#define GET_READ_TRANSMIT_POWER_LEVEL_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_TRANSMIT_POWER_LEVEL_connection_handle 2
#define GET_READ_TRANSMIT_POWER_LEVEL_TYPE(buf)  buf[6]
//READ_TRANSMIT_POWER_LEVEL_type 1

// Command: READ_LINK_SUPERVISION_TIMEOUT
#define GET_READ_LINK_SUPERVISION_TIMEOUT_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_LINK_SUPERVISION_TIMEOUT_connection_handle 2

// Command: WRITE_LINK_SUPERVISION_TIMEOUT
#define GET_WRITE_LINK_SUPERVISION_TIMEOUT_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//WRITE_LINK_SUPERVISION_TIMEOUT_connection_handle 2
#define GET_WRITE_LINK_SUPERVISION_TIMEOUT_LINK_SUPERVISION_TIMEOUT(buf)  *((uint16_t *)(&buf[6]))
//WRITE_LINK_SUPERVISION_TIMEOUT_link_supervision_timeout 2

// Command: WRITE_CURRENT_IAC_LAP
#define GET_WRITE_CURRENT_IAC_LAP_NUM_CURRENT_IAC(buf)  buf[4]
//WRITE_CURRENT_IAC_LAP_num_current_iac 1
#define GET_WRITE_CURRENT_IAC_LAP_LAP(buf)   (uint32_t *)(&buf[5])
//WRITE_CURRENT_IAC_LAP_lap 3

// Command: SET_AFH_HOST_CHANNEL_CLASSIFICATION
#define GET_SET_AFH_HOST_CHANNEL_CLASSIFICATION_CHANNEL_MAP(buf)  (uint8_t *)(&buf[4])
//SET_AFH_HOST_CHANNEL_CLASSIFICATION_channel_map 10

// Command: WRITE_INQUIRY_SCAN_TYPE
#define GET_WRITE_INQUIRY_SCAN_TYPE_INQUIRY_SCAN_TYPE(buf)  buf[4]
//WRITE_INQUIRY_SCAN_TYPE_inquiry_scan_type 1

// Command: WRITE_INQUIRY_MODE
#define GET_WRITE_INQUIRY_MODE_INQUIRY_MODE(buf)  buf[4]
//WRITE_INQUIRY_MODE_inquiry_mode 1

// Command: WRITE_PAGE_SCAN_TYPE
#define GET_WRITE_PAGE_SCAN_TYPE_PAGE_SCAN_TYPE(buf)  buf[4]
//WRITE_PAGE_SCAN_TYPE_page_scan_type 1

// Command: WRITE_AFH_CHANNEL_ASSESSMENT_MODE
#define GET_WRITE_AFH_CHANNEL_ASSESSMENT_MODE_AFH_CHANNEL_ASSESSMENT_MODE(buf)  buf[4]
//WRITE_AFH_CHANNEL_ASSESSMENT_MODE_afh_channel_assessment_mode 1

// Command: WRITE_EXTENDED_INQUIRY_RESPONSE
#define GET_WRITE_EXTENDED_INQUIRY_RESPONSE_FEC_REQUIRED(buf)  buf[4]
//WRITE_EXTENDED_INQUIRY_RESPONSE_fec_required 1
#define GET_WRITE_EXTENDED_INQUIRY_RESPONSE_EXTENDED_INQUIRY_RESPONSE(buf)  (uint8_t *)(&buf[5])
//WRITE_EXTENDED_INQUIRY_RESPONSE_extended_inquiry_response 240

// Command: REFRESH_ENCRYPTION_KEY
#define GET_REFRESH_ENCRYPTION_KEY_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//REFRESH_ENCRYPTION_KEY_connection_handle 2

// Command: WRITE_SIMPLE_PAIRING_MODE
#define GET_WRITE_SIMPLE_PAIRING_MODE_SIMPLE_PAIRING_MODE(buf)  buf[4]
//WRITE_SIMPLE_PAIRING_MODE_simple_pairing_mode 1

// Command: WRITE_INQUIRY_TRANSMIT_POWER_LEVEL
#define GET_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_TX_POWER_LEVEL(buf)  buf[4]
//WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_tx_power_level 1

// Command: SEND_KEYPRESS_NOTIFICATION
#define GET_SEND_KEYPRESS_NOTIFICATION_BD_ADDR(buf)  (uint8_t *)(&buf[4])
//SEND_KEYPRESS_NOTIFICATION_bd_addr 6
#define GET_SEND_KEYPRESS_NOTIFICATION_NOTIFICATION_TYPE(buf)  buf[10]
//SEND_KEYPRESS_NOTIFICATION_notification_type 1

// Command: ENHANCED_FLUSH
#define GET_ENHANCED_FLUSH_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//ENHANCED_FLUSH_handle 2
#define GET_ENHANCED_FLUSH_PACKET_TYPE(buf)  buf[6]
//ENHANCED_FLUSH_packet_type 1

// Command: READ_ENHANCED_TRANSMIT_POWER_LEVEL
#define GET_READ_ENHANCED_TRANSMIT_POWER_LEVEL_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_ENHANCED_TRANSMIT_POWER_LEVEL_connection_handle 2
#define GET_READ_ENHANCED_TRANSMIT_POWER_LEVEL_TYPE(buf)  buf[6]
//READ_ENHANCED_TRANSMIT_POWER_LEVEL_type 1

// Command: WRITE_SECURE_CONNECTIONS_HOST_SUPPORT
#define GET_WRITE_SECURE_CONNECTIONS_HOST_SUPPORT_SECURE_CONNECTIONS_HOST_SUPPORT(buf)  buf[4]
//WRITE_SECURE_CONNECTIONS_HOST_SUPPORT_secure_connections_host_support 1

// Command: WRITE_EXTENDED_PAGE_TIMEOUT
#define GET_WRITE_EXTENDED_PAGE_TIMEOUT_EXTENDED_PAGE_TIMEOUT(buf)  *((uint16_t *)(&buf[4]))
//WRITE_EXTENDED_PAGE_TIMEOUT_extended_page_timeout 2

// Command: WRITE_EXTENDED_INQUIRY_LENGTH
#define GET_WRITE_EXTENDED_INQUIRY_LENGTH_EXTENDED_INQUIRY_LENGTH(buf)  *((uint16_t *)(&buf[4]))
//WRITE_EXTENDED_INQUIRY_LENGTH_extended_inquiry_length 2


/*INFORMATIONAL_PARAMETERS PARAMETERS */

// Command: READ_LOCAL_VERSION_INFORMATION
#define GET_READ_LOCAL_VERSION_INFORMATION_SAMPLEDATA(buf)  buf[4]
//READ_LOCAL_VERSION_INFORMATION_sampledata 1

// Command: READ_LOCAL_EXTENDED_FEATURES
#define GET_READ_LOCAL_EXTENDED_FEATURES_PAGE_NUMBER(buf)  buf[4]
//READ_LOCAL_EXTENDED_FEATURES_page_number 1


/*STATUS_PARAMETERS PARAMETERS */

// Command: READ_LINK_QUALITY
#define GET_READ_LINK_QUALITY_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_LINK_QUALITY_handle 2

// Command: READ_RSSI
#define GET_READ_RSSI_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_RSSI_handle 2

// Command: READ_AFH_CHANNEL_MAP
#define GET_READ_AFH_CHANNEL_MAP_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_AFH_CHANNEL_MAP_connection_handle 2

// Command: READ_CLOCK
#define GET_READ_CLOCK_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_CLOCK_connection_handle 2
#define GET_READ_CLOCK_WHICH_CLOCK(buf)  buf[6]
//READ_CLOCK_which_clock 1

// Command: READ_ENCRYPTION_KEY_SIZE
#define GET_READ_ENCRYPTION_KEY_SIZE_CONNECTION_HANDLE(buf)  *((uint16_t *)(&buf[4]))
//READ_ENCRYPTION_KEY_SIZE_connection_handle 2


/*TEST_COMMANDS PARAMETERS */

// Command: WRITE_SIMPLE_PAIRING_DEBUG_MODE
#define GET_WRITE_SIMPLE_PAIRING_DEBUG_MODE_SIMPLE_PAIRING_DEBUG_MODE(buf)  buf[4]
//WRITE_SIMPLE_PAIRING_DEBUG_MODE_simple_pairing_debug_mode 1


/*VENDOR_SPECIFIC PARAMETERS */

// Command: ECHO
#define GET_ECHO_ECHO_STR(buf)  buf[4]
//ECHO_echo_str 1

// Command: VIRTUAL_LISTEN_CONNECTION
#define GET_VIRTUAL_LISTEN_CONNECTION_CONNECT_PORT(buf)  *((uint16_t *)(&buf[4]))
//VIRTUAL_LISTEN_CONNECTION_connect_port 2

// Command: VIRTUAL_CANCEL_LISTEN
#define GET_VIRTUAL_CANCEL_LISTEN_EMPTY_BYTE(buf)  buf[4]
//VIRTUAL_CANCEL_LISTEN_empty_byte 1

// Command: VIRTUAL_CONNECT
#define GET_VIRTUAL_CONNECT_CONNECT_IP(buf)  (uint32_t *)(&buf[4])
//VIRTUAL_CONNECT_connect_ip 4
#define GET_VIRTUAL_CONNECT_CONNECT_PORT(buf)  *((uint16_t *)(&buf[8]))
//VIRTUAL_CONNECT_connect_port 2

// Command: VIRTUAL_CANCEL_CONNECT
#define GET_VIRTUAL_CANCEL_CONNECT_EMPTY_BYTE(buf)  buf[4]
//VIRTUAL_CANCEL_CONNECT_empty_byte 1

// Command: INTERNAL_EVENT_TRIGGER_FROM_LPW
#define GET_INTERNAL_EVENT_TRIGGER_FROM_LPW_META_DATA(buf)  (uint32_t *)(&buf[4])
//INTERNAL_EVENT_TRIGGER_FROM_LPW_meta_data 4
#define GET_INTERNAL_EVENT_TRIGGER_FROM_LPW_LPW_EVNT_TYPE(buf)  buf[8]
//INTERNAL_EVENT_TRIGGER_FROM_LPW_lpw_evnt_type 1
#define GET_INTERNAL_EVENT_TRIGGER_FROM_LPW_BD_ADDR(buf)  (uint8_t *)(&buf[9])
//INTERNAL_EVENT_TRIGGER_FROM_LPW_bd_addr 6
#define GET_INTERNAL_EVENT_TRIGGER_FROM_LPW_DATA(buf)  (uint8_t *)(&buf[15])
//INTERNAL_EVENT_TRIGGER_FROM_LPW_data -1

// Command: KILL_FIRMWARE
#define GET_KILL_FIRMWARE_EMPTY_BYTE(buf)  buf[4]
//KILL_FIRMWARE_empty_byte 1

// Command: SET_LOCAL_LMP_FEATURES
#define GET_SET_LOCAL_LMP_FEATURES_LOCAL_FEATURES(buf)  (uint8_t *)(&buf[4])
//SET_LOCAL_LMP_FEATURES_local_features 8



#endif