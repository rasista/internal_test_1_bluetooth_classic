#include "page_scan_autogen.h"

{% for state in list_states %}
static void {{ sm_name }}_{{ state }}_handler(sm_t *page_scan_sm_cb, uint8_t trigger);
{% endfor %}



void {{ sm_name }}_handler(sm_t *page_scan_sm_cb, uint8_t trigger)
{
    //sim_printf("page_scan_sm_cb->current_state %u", page_scan_sm_cb->current_state)
    switch(page_scan_sm_cb->current_state)
    {
{% for state in list_states %}
        case {{ state }}:
            {{ sm_name }}_{{ state }}_handler(page_scan_sm_cb, trigger);
        break;
{% endfor %}
        default:
            sm_assert(page_scan_sm_cb, trigger);
        break;
    }
}

{% for state in list_states %}
static void {{ sm_name }}_{{ state }}_handler(sm_t *page_scan_sm_cb, uint8_t trigger)
{
    switch(trigger)
    {
{% for trigger in state_details_orig[state].keys() %}
        case {{ trigger }}:
            {{ state_details_orig[state][trigger] }}(page_scan_sm_cb, trigger);
        break;
{% endfor %}
        default:
            sm_assert(page_scan_sm_cb, trigger);
        break;
    }
}
{% endfor %}