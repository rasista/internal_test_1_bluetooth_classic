import threading
DEFAULT_VALUE = 0xFF

class HCI_Event_Vars:
    def __init__(self):
        # Device address variables
        self.device_bd_addr = []
        self.remote_device_bd_addr = []
        self.vendor_power_control_notification = DEFAULT_VALUE
        
        # Connection information
        self.acl_connection_info = ConnectionInfo()
        
        # Event variables autogenerated from hci_events.yaml
        # All event variables are initialized with DEFAULT_VALUE
        self.inquiry_complete = DEFAULT_VALUE
        self.inquiry_result = DEFAULT_VALUE
        self.conn_complete = DEFAULT_VALUE
        self.conn_request = DEFAULT_VALUE
        self.disconnection_complete = DEFAULT_VALUE
        self.authentication_complete = DEFAULT_VALUE
        self.remote_name_request_complete = DEFAULT_VALUE
        self.encrytpion_change_v1 = DEFAULT_VALUE
        self.encrytpion_change_v2 = DEFAULT_VALUE
        self.change_connection_link_key_complete = DEFAULT_VALUE
        self.link_key_type_changed = DEFAULT_VALUE
        self.read_remote_supported_features_complete = DEFAULT_VALUE
        self.read_remote_version_info_complete = DEFAULT_VALUE
        self.qos_setup_complete = DEFAULT_VALUE
        self.cmd_complete = DEFAULT_VALUE
        self.cmd_status = DEFAULT_VALUE
        self.hardware_error = DEFAULT_VALUE
        self.flush_occurred = DEFAULT_VALUE
        self.role_change = DEFAULT_VALUE
        self.num_of_completed_pkts = DEFAULT_VALUE
        self.mode_change = DEFAULT_VALUE
        self.return_link_keys = DEFAULT_VALUE
        self.pin_code_request = DEFAULT_VALUE
        self.link_key_request = DEFAULT_VALUE
        self.link_key_notification = DEFAULT_VALUE
        self.loopback_cmd = DEFAULT_VALUE
        self.data_buffer_overflow = DEFAULT_VALUE
        self.max_slots_change = DEFAULT_VALUE
        self.read_clock_offset_complete = DEFAULT_VALUE
        self.conn_pkt_type_changed = DEFAULT_VALUE
        self.qos_violation = DEFAULT_VALUE
        self.page_scan_rep_mode_change = DEFAULT_VALUE
        self.flow_specification_complete = DEFAULT_VALUE
        self.inquiry_result_rssi = DEFAULT_VALUE
        self.read_remote_extended_features_complete = DEFAULT_VALUE
        self.sync_conn_complete = DEFAULT_VALUE
        self.sync_conn_changed = DEFAULT_VALUE
        self.sniff_subrating = DEFAULT_VALUE
        self.extended_inquiry_result = DEFAULT_VALUE
        self.encryption_key_refresh_complete = DEFAULT_VALUE
        self.io_capability_req = DEFAULT_VALUE
        self.io_capability_resp = DEFAULT_VALUE
        self.user_confirmation_request = DEFAULT_VALUE
        self.user_passkey_request = DEFAULT_VALUE
        self.remote_oob_data_request = DEFAULT_VALUE
        self.simple_pairing_complete = DEFAULT_VALUE
        self.link_supervision_timeout_changed = DEFAULT_VALUE
        self.enhanced_flush_complete = DEFAULT_VALUE
        self.user_passkey_notification = DEFAULT_VALUE
        self.keypress_notification = DEFAULT_VALUE
        self.remote_host_supported_features_notification = DEFAULT_VALUE
        self.num_of_completed_data_blocks = DEFAULT_VALUE
        self.vendor_event = DEFAULT_VALUE
        self.virtual_connect_complete = DEFAULT_VALUE
        self.virtual_disconnect_complete = DEFAULT_VALUE
        
        # Semaphore for event handling
        self.eventHandlerSemaphore = threading.Semaphore(1)
        self.eventHandlerSemaphore.acquire()
        
class ConnectionInfo:
    def __init__(self):
        self.conn_handle = 0
        self.conn_type = 0
        self.passkey = 0
        self.bd_addr = [] 